#!/usr/bin/env node

var path 	= require('path'),
	dir		= path.join(__dirname, '..'),
	sys 	= require('sys'),
	program = require('commander'),
	_ 		= require('underscore'), 
	os 		= require('os'),
	fns 	= require( path.join(dir, 'lib', 'fns.js' ) ),
	config 	= require( path.join( dir, 'package.json') );

program.name = config.name ;
program.version( config.version );
/*
 * Inicia todo
 */
program
	.description( config.description )
	.option('-d, --db [db]', 'Name of db')
	.option('-h, --host [host]', 'IP for the mongoDB')
	.option('-p, --port [port]', 'Port for the mongoDB')
	.option('-u, --url [url]', 'Url to download the CVS' )
	.option('-n, --nick [nick]', 'Username for database' )
	.option('-w, --password [password]', 'Password for database' )
	.option('-m, --multi [multi]', 'Multiply servers mongo' )
	.option('-i, --divsor [divisor]', 'Divisor entre valores' )
	.action( function( options ){
		database = !options.multi ? utils.url( {
				host : options.host || false,
				port : options.port || 27017,
				user : _super.nick || false,
				pass : _super.password || false,
				path : options.db || 'test'
				type : 'mongo'
			}) : options.multi;
		fns.existAndDownload( options.url || config.download, function (err, path) {
			if(err)
				uitls.console(err, path);
			fns.update(path, database, utils.orden( options.orden ) , options.divsor || '", "', function(err, doc){
				console.log(doc);
				process.exit(this);
			});
		});
	});

program.parse(process.argv);